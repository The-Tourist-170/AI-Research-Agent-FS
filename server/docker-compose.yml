x-common-env: &common-env
  PORT: 3000
  REDIS_URL: redis://redis:6379
  NEWS_API_KEY: ${NEWS_API_KEY}
  GEMINI_API_KEY: ${GEMINI_API_KEY}

services:
  db:
    image: postgres:14
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: research_db
    ports:
      - '5432:5432'
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d research_db"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:6
    ports:
      - '6379:6379'
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5

  backend:
    build:
      context: ./
    depends_on:
      db:
        condition: service_healthy 
      redis:
        condition: service_healthy 
    environment:
      <<: *common-env
      DATABASE_URL: "postgres://postgres:postgres@db:5432/research_db?sslmode=disable"
    ports:
      - '3000:3000'
    command: ["npm", "start"] 

  worker:
    build:
      context: ./
    depends_on:
      redis:
        condition: service_healthy 
      db:
        condition: service_healthy 
    environment:
      <<: *common-env
      DATABASE_URL: "postgres://postgres:postgres@db:5432/research_db?sslmode=disable"
    command: ["npm", "run", "worker"]
